  Cleo - это система управления заданиями, ориентированная на
вычислительные кластеры.

  Данная система создана для Межведомственного Суперкомпьютерного
Центра (МСЦ) и Научно-исследовалеского Вычислительного Центра МГУ
(НИВЦ МГУ). Автор системы: Сергей Жуматий (serg@parallel.ru).


  Система распространяется свободно по лицензии GPL2. Обязательным
условием ИСПОЛЬЗОВАНИЯ системы является бесплатная регистрация на
сайте http://parcon.parallel.ru/cleo.html


УСТАНОВКА.

  1. Для успешной работы на голоной машине и на узлах должен быть
     установлен perl версии 5.6 или выше. Также необходимы модули
     Storable, Fcntl, POSIX, Time и IO.

  2. Для работы модуля POSIX необходимо перевести стандартные
     include-файлы в формат perl. Для этого запустите с правами
     суперпользователя такую команду:
      cd /usr/include; h2ph -r -l .

     Если на каких-то файлах она остановится с ошибкой, просто
     переместите их в любой другой каталог (например /tmp) и запустите
     команду снова. После успешного завершения, верните файлы обратно.

  3. Отредактируйте файл Makefile.conf. В неё определены переменные,
     указывающие куда будут установлены файлы системы, а также права
     на них. Для использования опции автоматического копирования
     файлов на вычислительные узлы, Вам необходим безпарольный вход на
     узлы по протоколу ssh. Либо настройте его, либо скопируйте файлы
     вручную (см. п. 8).

  4. Если у Вас уже работает система Cleo (или q3) версии ниже 5, и Вы
     хотите сохранить старые имена служебных программ (таких как
     qmode), то запустите 'make compatible'

  5. Если Вы хотите сохранить текущие исполняемые файлы, запустите
     'make backup'. Все текущие исполняемые файлы будут переименованы
     с добавлением расширения .version4.

  6. Сохраните Вашу оригинальную программу mpirun, если она
     расположена в том же каталоге, в который будет установлена
     Cleo. Cleo использует свой скрипт mpirun, но Вы должны сохранить
     исходный, т.к. он может потребоваться для запуска задач самой
     Cleo.

  7. Запустите команду 'make', а затем 'make install'.

  8. Если Вы не использовали автоматическое копирование, скопируйте
     файл $(BINDIR)/cleo-mon в соответстующий каталог на
     вычислительных узлах, а файл /etc/init.d/cleo-mon.rc - в файл
     /etc/init.d/cleo-mon на вычислительных узлах.
     Затем на всех узлах создайте каталог /usr/local/share/Cleo
     (или $SHAREDDIR/Cleo, если Вы меняли настройку в Makefile.conf) и
     скопируйте туда файл /usr/local/share/Cleo/Conn.pm.

  9. Для того, чтобы агенты на узлах стартовали автоматически,
     создайте на них символические ссылки на файл /etc/init.d/cleo-mon
     из каталога, соответствующего уровню загрузки узлов (например
     /etc/rc3.d или /etc/init.d/rc3.d и т.п.).

  10. Для того, чтобы система на головной машине стартовала
      автоматически, создайте на ней  символическую ссылку на файл
      /etc/init.d/cleo аналогично п. 9.

  Теперь необходимо скопировать файл /etc/cleo.conf.example (или один
  из примеров) в файл /etc/cleo.conf и отредактировать его. Обратитесь
  к документации для объяснения параметров в этом файле.

  Если Вы хотите использовать оригинальный mpirun для запуска задач,
  запретите его исполнения для всех, кроме владельца и группы (chmod
  o-rx mpirun.original) и смените его группу на специально
  выделенную. Запомните НОМЕР этой группы и введите его в параметре
  group секции [global] в файле /etc/cleo.conf.

  Для старта системы запустите агентов командой на узлах
  '/etc/init.d/cleo-mon start' и сервер на головной машине командой
  /etc/init.d/cleo start


ТОНКАЯ НАСТРОЙКА

  Вы можете расширить возможности системы, добавляя в неё свои
планировщики и модули.
  О том, как написать свой планировщик, можно прочесть в файле
README-sceduler-create.rus. В качестве образца можно взять планировщик
example-sceduler или стандартный планировщик base_sced.
  Система поддерживает дополнительные модули, которые загружаются при
старте и выполняются при запуске или завершении задач. С помощью
модулей возможно организовать, к примеру, копирование некоторых файлов
на узлы и последующую их очистку или нестандартную схему авторизации.
  В файле Modules-howto.rus дана спецификация модулей и простой
пример.


